#!/usr/bin/perl
use strict;

# Process tiles patterns to determine stats
# on which tiles touch which other tiles.

main();
sub main {
    my $total = 0; # total patterns processed
    my %touch_count; # $touch_count{XY} is number of patterns in which X touches Y
    my %touches; # $touches{XY} == 1 means X touches Y in current pattern
    my $prev_line = '';
    while (<>) {
        if (/^\s*$/) { # end of board
            foreach my $k (keys %touches) {
                $touch_count{$k}++;
                delete $touches{$k};
            }
            ++$total;
            $prev_line = '';
        } elsif (/^\s+(.*)$/) { # line in a board
            for (my $i = 0; $i < length $1; ++$i) {
                if ($prev_line) { # see which tiles touch vertically
                    my ($c1,$c2) = sort (substr($1,$i,1), substr($prev_line,$i,1));
                    touch(\%touches, $c1, $c2);
                }
                if ($i+1 < length $1) { # see which tiles touch horizontally
                    my ($c1,$c2) = sort (substr($1,$i,1), substr($1,$i+1,1));
                    touch(\%touches, $c1, $c2);
                }
            }
            $prev_line = $1;
        }
    }
    printf "   %6d  total\n", $total;
    foreach my $k (sort { $touch_count{$b} <=> $touch_count{$a} } keys %touch_count) {
        printf "%s %6d %5.1f%%\n",
            $k, $touch_count{$k}, 100 * $touch_count{$k} / $total;
    }
}

sub touch {
    my ($touches, $c1, $c2) = @_;
    return if $c1 eq $c2;
    return if $c1 eq '.' or $c2 eq '.';
    $$touches{"$c1$c2"} = 1;
}
